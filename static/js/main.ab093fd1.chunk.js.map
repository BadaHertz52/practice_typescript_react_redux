{"version":3,"sources":["component/Counter.tsx","moduels/counter.ts","container/CounterContainer.tsx","component/TodoItem.tsx","component/TodoList.tsx","component/TodoInsert.tsx","moduels/todo.ts","container/TodoApp.tsx","App.tsx","reportWebVitals.ts","moduels/index.ts","index.tsx"],"names":["Counter","count","onIncrease","onDecrease","onIncreaseBy","onClick","INCREASE","DECREASE","INCREASE_BY","initialState","CounterContainer","useSelector","state","counter","dispatch","useDispatch","type","diff","payload","increaseBy","TodoItem","todo","onToggle","onRemove","textStyle","textDecoration","done","id","style","text","color","marginLeft","TodoList","todos","length","map","TodoInsert","onInsert","useState","value","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","nextId","action","concat","filter","TodoApp","addTodo","toggleTodo","removeTodo","App","Appstyle","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab093fd1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype CounterProps = {\r\n  count:number ;\r\n  onIncrease:()=> void ;\r\n  onDecrease: ()=> void;\r\n  onIncreaseBy : (diff:number) => void;\r\n};\r\n\r\nfunction Counter ({\r\n  count, onIncrease, onDecrease, onIncreaseBy\r\n}:CounterProps){\r\n  return(\r\n    <div>\r\n      <h1>{count}</h1>\r\n      <button onClick={onIncrease}>+1</button>\r\n      <button onClick={onDecrease}>-1</button>\r\n      <button onClick= {()=> onIncreaseBy(5)}>+5</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Counter ; ","//action\r\n//type\r\nconst INCREASE = 'count/INCREASE' as const;\r\n\r\nconst DECREASE ='count/DECREASE' as const ;\r\n\r\nconst INCREASE_BY = 'count/INCREASE_BY' as const;\r\n\r\n//constructor\r\nexport const increase = ()=> ({type:INCREASE});\r\nexport const decrease = ()=>({type:DECREASE});\r\nexport const increaseBy = (diff: number)=> ({type:INCREASE_BY , payload: diff });\r\n\r\n//initial \r\ntype CounterState = {\r\n  count: number\r\n};\r\n\r\nconst initialState = {\r\n  count:0\r\n};\r\n\r\n//reducer\r\ntype CounterAction = \r\n  | ReturnType <typeof increase>\r\n  | ReturnType <typeof decrease>\r\n  | ReturnType <typeof increaseBy>\r\n;\r\nexport default function counter (state: CounterState = initialState , action:CounterAction):CounterState{\r\n  switch(action.type){\r\n    case INCREASE :\r\n      return {count :state.count +1 }  ;\r\n    case  DECREASE :\r\n      return {count: state.count -1} ;\r\n    case INCREASE_BY:\r\n      return {count:state.count + action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport  { RootState } from '../moduels'\r\nimport Counter from '../component/Counter';\r\nimport { decrease, increase , increaseBy} from '../moduels/counter';\r\n\r\nfunction CounterContainer (){\r\n  const count = useSelector ( (state:RootState)=> state.counter.count);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = ()=> {dispatch(increase())};\r\n  const onDecrease = ()=> {dispatch(decrease())};\r\n  const onIncreaseBy = (diff:number)=> {dispatch(increaseBy(diff))} ;\r\n  \r\n  return (\r\n    <Counter\r\n      count = {count}\r\n      onIncrease = {onIncrease}\r\n      onDecrease = {onDecrease}\r\n      onIncreaseBy = {onIncreaseBy}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CounterContainer;","import React from 'react';\r\nimport { Todo } from '../moduels/todo';\r\n\r\ntype TodoItemProps = {\r\n  todo : Todo ;\r\n  onToggle : (id:number) => void ;\r\n  onRemove : (id: number) => void ;\r\n};\r\n\r\nfunction TodoItem ({todo, onToggle,onRemove} :TodoItemProps){\r\n  const handleToggle = ()=> onToggle(todo.id) ;\r\n  const handleRemove = ()=> onRemove(todo.id);\r\n\r\n  const textStyle :React.CSSProperties ={\r\n    textDecoration: todo.done? 'line-through' : 'none'\r\n  } ;\r\n\r\n  const removeStyle : React.CSSProperties = {\r\n    color:'skyblue',\r\n    marginLeft:0 \r\n  };\r\n  return(\r\n    <li>\r\n      <span onClick={handleToggle} style={textStyle}>{todo.text}</span>\r\n      <span onClick={handleRemove} style={removeStyle}>(❌)</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem ;","import React from 'react';\r\nimport { Todo } from '../moduels/todo';\r\nimport TodoItem from './TodoItem';\r\n\r\ntype TodoListProps = {\r\n  todos :Todo[] ;\r\n  onToggle : (id:number) => void ;\r\n  onRemove : (id:number) => void\r\n};\r\n\r\nfunction TodoList ( {todos, onToggle, onRemove} : TodoListProps){\r\n  if(todos.length === 0) return <p> 등록된 항목이 없습니다.</p>\r\n  return (\r\n    <ul>\r\n      {todos.map( todo => <TodoItem \r\n        todo ={ todo} key= {todo.id} onToggle = {onToggle} onRemove={onRemove}\r\n      />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList ; ","import React, { FormEvent, useState } from 'react';\r\ntype TodoInsertProps = {\r\n  onInsert: (text:string) => void ;\r\n};\r\nfunction TodoInsert ( {onInsert}:TodoInsertProps){\r\n  const [value ,setValue] =useState('');\r\n  const onChange = (e :   React.ChangeEvent<HTMLInputElement>)=> {\r\n    setValue(e.target.value);\r\n  }; \r\n  const onSubmit = (e:FormEvent)=>{\r\n    e.preventDefault();\r\n    onInsert(value);\r\n    setValue('');\r\n  };\r\n  return(\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        placeholder=\"할일을 입력하세요\"\r\n        value ={value}\r\n        onChange ={onChange}\r\n      />\r\n      <button type =\"submit\">등록</button>\r\n    </form>\r\n  )\r\n}\r\nexport default TodoInsert ;\r\n","const ADD_TODO = 'todo/ADD_TODO' as const ;\r\nconst TOGGLE_TODO ='todo/TOGGLE_TODO' as const;\r\nconst REMOVE_TODO = 'todo/REMOVE_TODO' as const;\r\nlet nextId = 1; \r\n\r\nexport const addTodo = (text: string)=>({\r\n  type: ADD_TODO ,\r\n  payload : {\r\n    id: nextId ++,\r\n    text \r\n  }\r\n});\r\n\r\nexport const toggleTodo = (id:number)=>({\r\n  type:TOGGLE_TODO,\r\n  payload: id \r\n});\r\n\r\nexport const removeTodo = (id:number) => ({\r\n  type: REMOVE_TODO,\r\n  payload: id \r\n});\r\n\r\n\r\ntype TodosAction = \r\n| ReturnType <typeof addTodo> \r\n| ReturnType <typeof toggleTodo> \r\n| ReturnType <typeof removeTodo>;\r\n\r\nexport type Todo = {\r\n  id: number;\r\n  text:string;\r\n  done: boolean;\r\n};\r\n\r\ntype TodosState = Todo[];\r\n\r\nconst initialState :TodosState  = [];\r\n\r\nfunction todos (state : TodosState =initialState ,action :TodosAction) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return state.concat({\r\n        id: action.payload.id ,\r\n        text: action.payload.text ,\r\n        done:false\r\n      });\r\n    case TOGGLE_TODO:\r\n      return state.map( \r\n        todo => todo.id === action.payload ? {...todo , done: ! todo.done}: todo\r\n        );\r\n    case REMOVE_TODO:\r\n      return state.filter( todo => todo.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n\r\n  \r\n}\r\nexport default todos ; \r\n","import React from 'react'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TodoList from '../component/TodoList';\r\nimport TodoInsert from '../component/TodoInsert';\r\nimport { RootState } from '../moduels';\r\nimport { addTodo, removeTodo, toggleTodo } from '../moduels/todo';\r\n\r\nfunction TodoApp(){\r\n  const todos = useSelector( (state :RootState) => state.todos);\r\n  const dispatch = useDispatch();\r\n  const onInsert = (text: string)=> {dispatch(addTodo(text))};\r\n  const onToggle = (id:number) => {dispatch(toggleTodo(id))} ;\r\n  const onRemove = (id:number) => {\r\n    dispatch(removeTodo(id))\r\n  } ;\r\n  \r\n  return (\r\n    <>\r\n      <TodoInsert onInsert = {onInsert}/>\r\n      <TodoList todos={todos} onToggle ={onToggle} onRemove ={onRemove}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoApp ;","import React from 'react';\r\nimport CounterContainer from './container/CounterContainer';\r\nimport TodoApp from './container/TodoApp';\r\n\r\n\r\nfunction App () {\r\n  const Appstyle :React.CSSProperties  = {\r\n    marginLeft: 200,\r\n    marginTop: 100\r\n  };\r\n  return (\r\n    <>\r\n      <div style = {Appstyle}>\r\n        <h1>COUNTER</h1>\r\n        <CounterContainer/>\r\n      </div>\r\n      \r\n      <div style = {Appstyle} >\r\n        <h1>Todo Lsit</h1>\r\n        <TodoApp/> \r\n      </div>\r\n      \r\n      \r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers} from 'redux';\r\nimport counter from './counter';\r\nimport todos from './todo';\r\n\r\nconst rootReducer = combineReducers({counter,todos});\r\nexport default rootReducer;\r\nexport type RootState = ReturnType <typeof rootReducer>;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport rootReducer from './moduels';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}